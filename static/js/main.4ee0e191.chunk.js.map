{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","menu","url","categories","name","preview","intro","Material","id","data","useState","expanded","setExpanded","className","src","onClick","console","log","style","height","size","level","e","window","open","photos","connect","send","Home","go","fetchedUser","title","items","entries","index","value","push","key","getMaterials","osName","platform","Persik","props","left","data-to","IOS","width","App","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","sendPromise","user","subscribe","detail","type","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4ee0e191.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport UsersStack from '@vkontakte/vkui/dist/components/UsersStack/UsersStack';\nimport connect from '@vkontakte/vk-connect';\n\nimport './Home.css';\n\nconst menu = [\n    {\n        url: \"https://luna-2.tass.ru/\",\n        categories: ['Культура', 'История'],\n        name: \"Луна. Первый контакт\",\n        preview: \"https://luna-2.tass.ru/shares/fb.png\",\n        intro: \"Начало освоению спутника Земли положила «Луна-2». В 1959 году советская станция стала первым искусственным аппаратом, достигшим поверхности Луны. После этого наступило время больших открытий: запуск первых автоматических станций, первый луноход и первая высадка человека на Луну. Потом полёты к Луне на некоторое время прекратились, но сейчас внимание человечества снова обращено к ней. Мы изучили все лунные миссии: от первого успеха «Луны-2» и программы Apollo до планов новых экспедиций и строительства лунных баз.\"\n    },\n    {\n        url: \"https://monstry.tass.ru/\",\n        categories: ['Культура', 'История'],\n        name: \"Бестиарий: 10 эпических монстров России\",\n        preview: \"https://rm-content.s3.amazonaws.com/57f773462aa31a0078116425/upload-72efc906-68ad-48eb-8e6e-872c2598c161.png\",\n        intro: \"Мы собрали чудовищ из разных регионов нашей страны. Они различаются по происхождению, среде обитания, внешнему виду и способностям. Единственное, что их объединяет, — колоссальные размеры.\"\n    }\n];\n\n\nconst Material = ({id, data}) => {\n\n    const [expanded, setExpanded] = useState(false);\n\n    return (\n        <div>\n            <div className=\"collapsible\" >\n                <img src={data.preview} className=\"preview-pic\" onClick={() => {setExpanded(!expanded); console.log(expanded);} }/>\n\n                <div className=\"intro\" style={{height: expanded ? \"auto\" : \"0\"}}>\n                    <Div>\n                        <p>{data.intro}</p>\n\n                        <Button size=\"xl\" level=\"secondary\" onClick={e => window.open(data.url, \"_blank\")}>\n                            Читать\n                        </Button>\n\n                        <UsersStack\n                            photos={[\n                                'https://sun9-1.userapi.com/c850624/v850624456/9f63e/c2_IbBit7I8.jpg?ava=1',\n                                'https://sun9-6.userapi.com/c851528/v851528416/e0360/1UfQ8aSIGVA.jpg?ava=1'\n                            ]}\n                            size=\"m\"\n                        >Твоим друзья уже понравилось</UsersStack>\n                        <Button size=\"xl\" level=\"secondary\" \n                        onClick={e => connect.send(\"VKWebAppShowWallPostBox\", {\"message\": \"Hello!\"})}>\n                        Поделиться с друзьями\n                        </Button>\n\n                    </Div>\n                </div>\n            </div>\n\n        </div>\n    )\n};\n\n\nconst getMaterials = () => {\n    const items = []\n\n    for (const [index, value] of menu.entries()) {\n        items.push(<Material data={value} key={index}/>)\n    }\n\n    return (\n        <div>\n            {items}\n        </div>\n    );\n};\n\nconst Home = ({id, go, fetchedUser}) => {\n    return (\n        <Panel id={id}>\n            {/*{fetchedUser &&*/}\n            {/*<Group title=\"User Data Fetched with VK Connect\">*/}\n            {/*    <Cell*/}\n            {/*        before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}*/}\n            {/*        description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}*/}\n            {/*    >*/}\n            {/*        {`${fetchedUser.first_name} ${fetchedUser.last_name}`}*/}\n            {/*    </Cell>*/}\n            {/*</Group>}*/}\n\n            <Group title=\"Твоя подборка материалов\">\n                <Div>\n                    {getMaterials()}\n                </Div>\n            </Group>\n        </Panel>\n    )\n};\n\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<div className=\"overlay\">\n\t\t\t<iframe src=\"https://monstry.tass.ru/\" width=\"100%\" height=\"100%\"/>\n\t\t</div>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}